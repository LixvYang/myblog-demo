const t=JSON.parse('{"key":"v-45dcc2fa","path":"/posts/program/golang/tool/grpc/2.html","title":"GRPC教程 2- gRPC下载以及入门gRPC","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2023-03-28T00:00:00.000Z","isOriginal":true,"category":["tutorial"],"tag":["golang","grpc"]},"headers":[{"level":2,"title":"安装gRPC","slug":"安装grpc","link":"#安装grpc","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1686705181000,"updatedTime":1686705181000,"contributors":[{"name":"yanglixin","email":"yanglixin@qiniu.com","commits":1}]},"readingTime":{"minutes":3,"words":900},"filePathRelative":"posts/program/golang/tool/grpc/2.md","localizedDate":"2023年3月28日","excerpt":"<h1> GRPC教程 2- gRPC下载以及入门gRPC</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>本篇文章我们开始学习gRPC，我们之前学到了RPC(远程过程调用)，那么gRPC是什么呢？gRPC是Google开源的现代高性能RPC框架，能够运行在任何环境中，使用HTTP2作为传输协议。</p>\\n<p>gRPC与RPC一样，可以像调用本地方法一样去调用另一个进程上的服务，这可以帮助你很轻松的创建微服务程序。gRPC只是定义类型和远程服务带有的参数和返回类型，我们需要在gRPC服务端程序中定义服务的逻辑，在客户端调用和服务器端相同的方法。</p>\\n</div>"}');export{t as data};
