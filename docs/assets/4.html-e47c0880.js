const t=JSON.parse('{"key":"v-49467438","path":"/posts/program/golang/tool/grpc/4.html","title":"GRPC教程 4 - GRPC-Gateway教程与Transcoding","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2023-03-30T00:00:00.000Z","isOriginal":true,"category":["tutorial"],"tag":["golang","grpc"]},"headers":[{"level":2,"title":"基本示例","slug":"基本示例","link":"#基本示例","children":[]},{"level":2,"title":"Transcoding","slug":"transcoding","link":"#transcoding","children":[]}],"git":{"createdTime":1686705181000,"updatedTime":1686705181000,"contributors":[{"name":"yanglixin","email":"yanglixin@qiniu.com","commits":1}]},"readingTime":{"minutes":4.32,"words":1295},"filePathRelative":"posts/program/golang/tool/grpc/4.md","localizedDate":"2023年3月30日","excerpt":"<h1> GRPC教程 4 - GRPC-Gateway教程与Transcoding</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>GRPC-Gateway是protoc的一个插件，类似protoc-gen-go和protoc-gen-go-grpc插件，前者是生成.pb.go后者是生成.grpc.pb.go文件。</p>\\n</div>\\n<p>那么这两个插件是帮助proto文件生成go语言的插件，那么GRPC-Gateway呢，它是一个可以根据proto文件的定义生成一个反向代理器的，服务器可以将 RESTful JSON API 转换为 GRPC。</p>"}');export{t as data};
