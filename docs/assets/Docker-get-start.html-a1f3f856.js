const l=JSON.parse('{"key":"v-51ce692c","path":"/posts/program/docker/Docker-get-start.html","title":"Docker 底层技术","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2021-12-13T00:00:00.000Z","isOriginal":true,"category":["tutorial"],"tag":["docker"]},"headers":[{"level":2,"title":"镜像","slug":"镜像","link":"#镜像","children":[]},{"level":2,"title":"容器","slug":"容器","link":"#容器","children":[]},{"level":2,"title":"仓库","slug":"仓库","link":"#仓库","children":[]},{"level":2,"title":"使用镜像","slug":"使用镜像","link":"#使用镜像","children":[{"level":3,"title":"运行","slug":"运行","link":"#运行","children":[]}]},{"level":2,"title":"列出容器","slug":"列出容器","link":"#列出容器","children":[{"level":3,"title":"虚悬镜像","slug":"虚悬镜像","link":"#虚悬镜像","children":[]},{"level":3,"title":"中间层镜像","slug":"中间层镜像","link":"#中间层镜像","children":[]},{"level":3,"title":"列出部分镜像","slug":"列出部分镜像","link":"#列出部分镜像","children":[]}]},{"level":2,"title":"删除本地镜像","slug":"删除本地镜像","link":"#删除本地镜像","children":[]},{"level":2,"title":"使用 Dockerfile 定制镜像","slug":"使用-dockerfile-定制镜像","link":"#使用-dockerfile-定制镜像","children":[{"level":3,"title":"FROM指定基础镜像","slug":"from指定基础镜像","link":"#from指定基础镜像","children":[]},{"level":3,"title":"RUN 执行命令","slug":"run-执行命令","link":"#run-执行命令","children":[]},{"level":3,"title":"构建镜像","slug":"构建镜像","link":"#构建镜像","children":[]},{"level":3,"title":"镜像构建上下文（Context）","slug":"镜像构建上下文-context","link":"#镜像构建上下文-context","children":[]},{"level":3,"title":"镜像的实现原理","slug":"镜像的实现原理","link":"#镜像的实现原理","children":[]}]},{"level":2,"title":"容器","slug":"容器-1","link":"#容器-1","children":[{"level":3,"title":"启动容器","slug":"启动容器","link":"#启动容器","children":[]},{"level":3,"title":"后台运行","slug":"后台运行","link":"#后台运行","children":[]},{"level":3,"title":"终止容器","slug":"终止容器","link":"#终止容器","children":[]},{"level":3,"title":"进入容器","slug":"进入容器","link":"#进入容器","children":[]},{"level":3,"title":"导出容器","slug":"导出容器","link":"#导出容器","children":[]},{"level":3,"title":"删除容器","slug":"删除容器","link":"#删除容器","children":[]}]},{"level":2,"title":"仓库","slug":"仓库-1","link":"#仓库-1","children":[]},{"level":2,"title":"数据管理","slug":"数据管理","link":"#数据管理","children":[]},{"level":2,"title":"底层实现","slug":"底层实现","link":"#底层实现","children":[{"level":3,"title":"命名空间","slug":"命名空间","link":"#命名空间","children":[]},{"level":3,"title":"控制组","slug":"控制组","link":"#控制组","children":[]},{"level":3,"title":"联合文件系统","slug":"联合文件系统","link":"#联合文件系统","children":[]}]}],"git":{"createdTime":1686705181000,"updatedTime":1686705181000,"contributors":[{"name":"yanglixin","email":"yanglixin@qiniu.com","commits":1}]},"readingTime":{"minutes":40.7,"words":12210},"filePathRelative":"posts/program/docker/Docker-get-start.md","localizedDate":"2021年12月13日","excerpt":"<h1> Docker 底层技术</h1>\\n<p>Docker 的关键部分就是镜像,容器和仓库理解了这三个概念，就理解了 Docker 的整个生命周期。</p>\\n<p>Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。使得 Docker 技术比虚拟机技术更为轻便、快捷。</p>\\n<p>下面的图片比较了 Docker 和传统虚拟化方式的不同之处。传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。</p>"}');export{l as data};
